@using AlarmApp.Web.Dtos

@model IEnumerable<AlarmDto>

<div class="dx-viewport p-5">

    <div class="row">
        <div class="col-4">
            <div class="row">
                <div class="col-12"> 
                    <div class="card mb-3" >
                        <div class="card-header" style="font-weight: bold;">
                            Distribution Of Alarm Status
                        </div>
                        <div class="card-body" style="background-color:#e3e3e3ad">
                            <div class="d-flex justify-content-center" style="height:207px">
                                <div id="pieChartDistribution" style="height:100%;width:100%;margin:auto"></div>
                                 
                            </div>

                        </div>

                    </div>
                </div>

            </div>
            <div class="row">
                <div class="col-12">
                    <div class="card mb-3">
                        <div class="card-header" style="font-weight: bold;">
                            Distribution Of Open Alarms By Alarm Type
                        </div>
                        <div class="card-body" style="background-color:#e3e3e3ad">
                            <div class="d-flex justify-content-center" style="height:208px">

                                <div id="pieChartDistributionTypeOpen" style="height:100%;width:100%;margin:auto"></div>
                                 
                            </div>

                        </div>

                    </div>
                </div>
            </div>

        </div>
        <div class="col-8">
            <div class="card mb-3  h-55">
                <div class="card-header" style="font-weight: bold;">
                    Alarm List
                </div>
                <div class="card-body" style="background-color:#e3e3e3ad">
                    

                    <div id="d-flex justify-content-center">

                        <div id="gridContainer" style="margin:auto"></div>

                    </div>



                </div>
            </div>

        </div>
    </div>


</div>







@section PageScripts {
    <script type="text/javascript">
        $(document).ready(function () {
            var model = @Html.Raw(JsonConvert.SerializeObject(Model));
            
            

            var dataDistStatus = [
                { status: 'Open', count: model.filter(item => item.Status === 'Open').length, color: 'red' },
                { status: 'Closed', count: model.filter(item => item.Status === 'Closed').length, color: 'green' }
            ];

            

            var openData = model.filter(item => item.Status === 'Open');
            var categoryCounts = {};
            var pieChartData = [];
            for (var i = 0; i < openData.length; i++) {
                var typeName = openData[i].TypeName;

                // Eğer kategori zaten varsa 1 artır, yoksa 1 olarak ata
                if (categoryCounts[typeName]) {
                    categoryCounts[typeName]++;
                } else {
                    categoryCounts[typeName] = 1;
                }
            }
            for (var key in categoryCounts) {
                pieChartData.push({ category: key, value: categoryCounts[key] });
            }
            
            console.log(pieChartData)

            $("#pieChartDistribution").dxPieChart({
                dataSource: dataDistStatus,
                series: [{
                    argumentField: "status",
                    valueField: "count",
                    size: {
                        height: 200,
                        width: 200
                    },
                    label: {
                        visible: true,
                        connector: {
                            visible: true,
                            width: 1
                        }
                    }
                }],
                palette: dataDistStatus.map(item => item.color)
            });

            $("#pieChartDistributionTypeOpen").dxPieChart({
                dataSource: pieChartData,
                series: [{
                    argumentField: "category",
                    valueField: "value",
                    
                    label: {
                        visible: true,
                        connector: {
                            visible: true,
                            width: 1
                        }
                    }
                }],
                 
                //title: 'Category Distribution'
            });

            $("#gridContainer").dxDataGrid({
                dataSource: model,
                keyExpr: "Id",
                rowAlternationEnabled: true,
                showRowLines: true,
                showBorders: true,
                paging: {
                    pageSize: 10,
                    pageIndex: 0    
                },
                pager: {
                    showPageSizeSelector: true,
                    allowedPageSizes: [10, 20, 50],
                    showNavigationButtons: true
                },
                height: '500px',
                filterRow: { visible: true },
                columns: [
                    {

                        caption: "#",
                        width: 50,
                        cellTemplate: function (container, options) {
                            var status = options.data.Status;
                            if (status === "Open") {
                                $("<div>")
                                    .css("background-color", "red")
                                    .css("width", "20px")
                                    .css("height", "20px")
                                    .css("border-radius", "50%")
                                    .css("margin", "auto")
                                    .appendTo(container);
                            } else if (status === "Closed") {
                                $("<div>")
                                    .css("background-color", "green")
                                    .css("width", "20px")
                                    .css("height", "20px")
                                    .css("border-radius", "50%")
                                    .css("margin", "auto")
                                    .appendTo(container);
                            }
                        }
                    },
                    {
                        dataField: "StartDate",
                        dataType: "date",
                        width: 150,
                    },
                    {
                        dataField: "EndDate",
                        dataType: "date",
                        width: 150,
                    },
                    {
                        dataField: "Status",
                        caption: "Status",
                        width: 150,
                    },
                    {
                        dataField: "SetValue",
                        width: 150,
                    },
                    {
                        dataField: "ResetValue",

                        width: 150,
                    },
                    {
                        dataField: "TypeName",

                        width: 150,
                    }
                ]
            });
        });




    </script>


}




